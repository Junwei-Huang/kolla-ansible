---
- name: Starting murano-engine container
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ murano_engine_image_full }}"
    name: "murano_engine"
    volumes:
      - "{{ node_config_directory }}/murano-engine/:{{ container_config_directory }}/:ro"
      - "{{ kolla_dev_repos_directory ~ '/murano/murano:/var/lib/kolla/venv/lib/python2.7/site-packages/murano' if murano_dev_mode | bool else '' }}"
      - "/etc/localtime:/etc/localtime:ro"
      - "kolla_logs:/var/log/kolla/"
  when: inventory_hostname in groups['murano-engine']

- name: Starting murano-api container
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    image: "{{ murano_api_image_full }}"
    name: "murano_api"
    volumes:
      - "{{ node_config_directory }}/murano-api/:{{ container_config_directory }}/:ro"
      - "{{ kolla_dev_repos_directory ~ '/murano/murano:/var/lib/kolla/venv/lib/python2.7/site-packages/murano' if murano_dev_mode | bool else '' }}"
      - "/etc/localtime:/etc/localtime:ro"
      - "kolla_logs:/var/log/kolla/"
  when: inventory_hostname in groups['murano-api']

- name: Waiting for Murano API service to be ready on first node
  wait_for:
    host: "{{ api_interface_address }}"
    port: "{{ murano_api_port }}"
    connect_timeout: 1
    timeout: 60
  run_once: True
  register: check_murano_port
  until: check_murano_port | success
  retries: 10
  delay: 6
  delegate_to: "{{ groups['murano-api'][0] }}"

- name: Checking if Murano core library package exists
  command: "docker exec murano_api murano \
                --os-username {{ openstack_auth.username }} \
                --os-password {{ keystone_admin_password }} \
                --os-project-name {{ openstack_auth.project_name }} \
                --os-auth-url \
                    {{ admin_protocol }}://{{ kolla_internal_fqdn }}:{{ keystone_admin_port }}/v3 \
                --murano-url \
                    {{ admin_protocol }}://{{ api_interface_address }}:{{ murano_api_port }} \
                package-list"
  register: status
  changed_when: False
  run_once: True
  delegate_to: "{{ groups['murano-api'][0] }}"

- name: Importing Murano core library package
  command: "docker exec murano_api murano \
                --os-username {{ openstack_auth.username }} \
                --os-password {{ keystone_admin_password }} \
                --os-project-name {{ openstack_auth.project_name }} \
                --os-auth-url \
                    {{ admin_protocol }}://{{ kolla_internal_fqdn }}:{{ keystone_admin_port }}/v3 \
                --murano-url \
                    {{ admin_protocol }}://{{ api_interface_address }}:{{ murano_api_port }} \
                package-import --exists-action u --is-public /io.murano.zip"
  run_once: True
  delegate_to: "{{ groups['murano-api'][0] }}"
  when:
    - status.stdout.find("io.murano") == -1 or action == "upgrade"
