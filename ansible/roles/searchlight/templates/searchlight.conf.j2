[DEFAULT]
debug = {{ searchlight_logging_debug }}

policy_file = /etc/searchlight/policy.json
log_dir = /var/log/kolla/searchlight
transport_url = rabbit://{% for host in groups['rabbitmq'] %}{{ rabbitmq_user }}:{{ rabbitmq_password }}@{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}:{{ rabbitmq_port }}{% if not loop.last %},{% endif %}{% endfor %}


[api]
port = {{ searchlight_api_port }}
bind_host = {{ api_interface_address }}
public_endpoint = {{ public_protocol }}://{{ kolla_external_fqdn }}:{{ searchlight_api_port }}
workers = {{ openstack_service_workers }}

[elasticsearch]
hosts = {{ searchlight_elasticsearch_url }}

[listener]
workers = {{ openstack_service_workers }}
notifications_pool = searchlight-listener

[paste_deploy]
flavor = keystone

[keystone_authtoken]
auth_uri = {{ internal_protocol }}://{{ kolla_internal_fqdn }}:{{ keystone_public_port }}
auth_url = {{ admin_protocol }}://{{ kolla_internal_fqdn }}:{{ keystone_admin_port }}
project_domain_name = {{ default_project_domain_name }}
project_name = service
user_domain_name = {{ default_user_domain_name }}
username = {{ searchlight_keystone_user }}
password = {{ searchlight_keystone_password }}
auth_type = password

memcache_security_strategy = ENCRYPT
memcache_secret_key = {{ memcache_secret_key }}
memcached_servers = {% for host in groups['memcached'] %}{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}:{{ memcached_port }}{% if not loop.last %},{% endif %}{% endfor %}

[service_credentials]
auth_uri = {{ internal_protocol }}://{{ kolla_internal_fqdn }}:{{ keystone_public_port }}
auth_url = {{ admin_protocol }}://{{ kolla_internal_fqdn }}:{{ keystone_admin_port }}
region_name = {{ openstack_region_name }}
project_domain_name = default
project_name = service
user_domain_name = default
username = {{ searchlight_keystone_user }}
password = {{ searchlight_keystone_password }}
auth_type = password
auth_plugin = password

memcache_security_strategy = ENCRYPT
memcache_secret_key = {{ memcache_secret_key }}
memcached_servers = {% for host in groups['memcached'] %}{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}:{{ memcached_port }}{% if not loop.last %},{% endif %}{% endfor %}

[resource_plugin:os_cinder_volume]
enabled = {{ enable_cinder | bool }}

[resource_plugin:os_cinder_snapshot]
enabled = {{ enable_cinder | bool }}

[resource_plugin:os_designate_zone]
enabled = {{ enable_designate | bool }}

[resource_plugin:os_designate_recordset]
enabled = {{ enable_designate | bool }}

[resource_plugin:os_swift_account]
enabled = {{ enable_swift | bool }}

[resource_plugin:os_swift_container]
enabled = {{ enable_swift | bool }}

[resource_plugin:os_swift_object]
enabled = {{ enable_swift | bool }}

[resource_plugin:os_nova_server]
enabled = {{ enable_nova | bool }}

[resource_plugin:os_nova_hypervisor]
enabled = {{ enable_nova | bool }}

[resource_plugin:os_nova_flavor]
enabled = {{ enable_nova | bool }}
notifications_topics_exchanges = versioned_notifications,nova

[resource_plugin:os_nova_servergroup]
enabled = {{ enable_nova | bool }}

[resource_plugin:os_glance_image]
enabled = {{ enable_glance | bool }}

[resource_plugin:os_glance_metadef]
enabled = {{ enable_glance | bool }}

[resource_plugin:os_neutron_net]
enabled = {{ enable_neutron | bool }}

[resource_plugin:os_neutron_port]
enabled = {{ enable_neutron | bool }}

[resource_plugin:os_neutron_floatingip]
enabled = {{ enable_neutron | bool }}

[resource_plugin:os_neutron_security_group]
enabled = {{ enable_neutron | bool }}

[resource_plugin:os_ironic_chassis]
enabled = {{ enable_ironic | bool }}
notifications_topics_exchanges = ironic_versioned_notifications,ironic

[resource_plugin:os_ironic_node]
enabled = {{ enable_ironic | bool }}
notifications_topics_exchanges = ironic_versioned_notifications,ironic

[resource_plugin:os_ironic_port]
enabled = {{ enable_ironic | bool }}
notifications_topics_exchanges = ironic_versioned_notifications,ironic

{# TODO(blallau): enabling osprofiler when fixed in searchlight #}

{# {% if enable_osprofiler | bool %} #}
{# [profiler] #}
{# enabled = true #}
{# trace_sqlalchemy = true #}
{# hmac_keys = {{ osprofiler_secret }} #}
{# {% if enable_elasticsearch | bool %} #}
{# connection_string = elasticsearch://{{ elasticsearch_address }}:{{ elasticsearch_port }} #}
{# {% endif %} #}
{# {% endif %} #}
